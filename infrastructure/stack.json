{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This AWS CloudFormation template Create/Update infrastructure of Amazon Athena as Code service",
  "Parameters": {
    "UserName": {
      "Type": "String",
      "Default": "amazon-athena-as-code",
      "Description": "User name"
    },
    "DeploymentBucket": {
      "Type": "String",
      "Description": "S3 bucket name where contains compiled lambdas"
    },
    "AthenaResultOutputLocation": {
      "Type": "String",
      "Description": "The location in S3 where query results are stored"
    },
    "LambdaCodeSource": {
      "Type": "String",
      "Description": "The location and name of the .zip file that contains your source code."
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeploymentBucket"
          },
          "S3Key": {
            "Fn::Sub": "${UserName}/${LambdaCodeSource}"
          }
        },
        "Description": "AWS CloudFormation custom Amazon Athena resources provisioner",
        "Environment": {
          "Variables": {
            "ATHENA_RESULT_OUTPUT_LOCATION": {
              "Fn::Sub": "s3://${AthenaResultOutputLocation}/"
            }
          }
        },
        "FunctionName": {
          "Fn::Sub": "${UserName}-resource-provisioner"
        },
        "Handler": "com.github.vitalibo.a3c.provisioner.LambdaRequestHandler",
        "MemorySize": 512,
        "Role": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${UserName}-execution-role"
        },
        "Runtime": "java8",
        "Timeout": 90,
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": "amazon-athena-as-code"
          }
        ]
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaFunction",
            "Arn"
          ]
        },
        "Principal": "cloudformation.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        },
        "SourceArn": {
          "Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/*"
        }
      }
    },
    "LambdaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "/aws/lambda/${LambdaFunction}"
        },
        "RetentionInDays": 3
      }
    }
  },
  "Outputs": {
    "LambdaArn": {
      "Value": {
        "Fn::GetAtt": [
          "LambdaFunction",
          "Arn"
        ]
      },
      "Export": {
        "Name": "A3CServiceToken"
      }
    }
  }
}