{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This AWS CloudFormation template Create/Update user stack of Amazon Athena as Code service",
  "Parameters": {
    "UserName": {
      "Type": "String",
      "Default": "amazon-athena-as-code",
      "Description": "User name"
    },
    "DeploymentBucket": {
      "Type": "String",
      "Description": "S3 bucket name where contains compiled lambdas"
    },
    "AthenaResultOutputLocation": {
      "Type": "String",
      "Description": "The location in S3 where query results are stored"
    }
  },
  "Resources": {
    "User": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "UserName": {
          "Ref": "UserName"
        },
        "Policies": [
          {
            "PolicyName": "Infrastructure",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "cloudformation:DescribeStacks",
                    "cloudformation:*Stack",
                    "cloudformation:*ChangeSet"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${UserName}-*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*Object"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:s3:::${DeploymentBucket}/${UserName}/*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:*LogGroup",
                    "logs:DescribeLogGroups",
                    "logs:PutRetentionPolicy"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group::log-stream:"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${UserName}-*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:*Function",
                    "lambda:*Permission",
                    "lambda:*FunctionConfiguration",
                    "lambda:UpdateFunctionCode"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${UserName}-*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:PassRole"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/${UserName}-*"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "AccessKey": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": {
          "Ref": "User"
        }
      }
    },
    "ExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${UserName}-execution-role"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "Runtime",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "*"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "AccessKey": {
      "Value": {
        "Ref": "AccessKey"
      }
    },
    "SecretKey": {
      "Value": {
        "Fn::GetAtt": [
          "AccessKey",
          "SecretAccessKey"
        ]
      }
    }
  }
}